##########################################
 POO - Programacion orientada a Objetos
##########################################

#Ejemplo1:
 class Vehiculo{
     String color="";
     String modelo="";
     String marca="";

     void Arrancar(){
         print("Hola soy el auto $marca y estoy arrancando");
     }
     void CamabiarValor(Vehiculo vehiculo){
         vehiculo.marca="Mazda";
     }
 }

void main(){
    var auto =new Vehiculo();

    auto.color = "Rojo";
    auto.marca ="Ford";
    auto.Arrancar();

    auto.CamabiarValor(auto);
    auto.Arrancar();

}

####################### CONSTRUCTOR ############################

#ejemplo1: Forma larga
 class Vehiculo{
     String color="";
     String modelo="";
     String marca="";

     //constructor
     Vehiculo(String marca, String modelo){
        this.modelo=modelo;
        this.marca=marca;
     }

     void Arrancar(){
         print("Hola soy el auto $marca y estoy arrancando");
     }

     void Acelerar(int velocidad){
        print("Mi velocidad actual es $velocidad km/h");
     }

     void CamabiarValor(Vehiculo vehiculo){
         vehiculo.marca="Mazda";
     }
 }

void main(){
    var auto =new Vehiculo("Ford", "Focus");

    auto.Arrancar();
}

#ejemplo2: Forma corta
 class Vehiculo{
     String color="";
     String modelo="";
     String marca="";

     //constructor
     Vehiculo(this.marca, this.modelo);

     void Arrancar(){
         print("Hola soy el auto $marca y estoy arrancando");
     }

     void Acelerar(int velocidad){
        print("Mi velocidad actual es $velocidad km/h");
     }

     void CamabiarValor(Vehiculo vehiculo){
         vehiculo.marca="Mazda";
     }
 }

void main(){
    var auto =new Vehiculo("Ford", "Focus");

    auto.Arrancar();
}
